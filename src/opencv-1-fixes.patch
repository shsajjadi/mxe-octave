Common subdirectories: opencv-3.4.3.orig/3rdparty and opencv-3.4.3/3rdparty
Common subdirectories: opencv-3.4.3.orig/apps and opencv-3.4.3/apps
Common subdirectories: opencv-3.4.3.orig/cmake and opencv-3.4.3/cmake
diff -ut opencv-3.4.3.orig/CMakeLists.txt opencv-3.4.3/CMakeLists.txt
--- opencv-3.4.3.orig/CMakeLists.txt	2019-10-02 15:01:47.179900886 -0400
+++ opencv-3.4.3/CMakeLists.txt	2019-10-02 15:19:18.363163935 -0400
@@ -39,7 +39,7 @@
   if(NOT CMAKE_TOOLCHAIN_FILE)
     # it _must_ go before project(OpenCV) in order to work
     if(WIN32)
-      set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE PATH "Installation Directory")
+      #set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE PATH "Installation Directory")
     else()
       set(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Installation Directory")
     endif()
@@ -47,7 +47,7 @@
     #Android: set output folder to ${CMAKE_BINARY_DIR}
     set(LIBRARY_OUTPUT_PATH_ROOT ${CMAKE_BINARY_DIR} CACHE PATH "root for library output, set this to change where android libs are compiled to" )
     # any cross-compiling
-    set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE PATH "Installation Directory")
+    #set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE PATH "Installation Directory")
   endif()
 endif()
 
@@ -377,14 +377,7 @@
   ocv_update(OPENCV_DOC_INSTALL_PATH share/OpenCV/doc)
 endif()
 
-if(WIN32 AND CMAKE_HOST_SYSTEM_NAME MATCHES Windows)
-  if(DEFINED OpenCV_RUNTIME AND DEFINED OpenCV_ARCH)
-    ocv_update(OpenCV_INSTALL_BINARIES_PREFIX "${OpenCV_ARCH}/${OpenCV_RUNTIME}/")
-  else()
-    message(STATUS "Can't detect runtime and/or arch")
-    ocv_update(OpenCV_INSTALL_BINARIES_PREFIX "")
-  endif()
-elseif(ANDROID)
+if(ANDROID)
   ocv_update(OpenCV_INSTALL_BINARIES_PREFIX "sdk/native/")
 else()
   ocv_update(OpenCV_INSTALL_BINARIES_PREFIX "")
@@ -433,11 +426,8 @@
   ocv_update(3P_LIBRARY_OUTPUT_PATH      "${OpenCV_BINARY_DIR}/3rdparty/lib${LIB_SUFFIX}")
 
   if(WIN32 AND CMAKE_HOST_SYSTEM_NAME MATCHES Windows)
-    if(OpenCV_STATIC)
-      ocv_update(OPENCV_LIB_INSTALL_PATH   "${OpenCV_INSTALL_BINARIES_PREFIX}staticlib${LIB_SUFFIX}")
-    else()
-      ocv_update(OPENCV_LIB_INSTALL_PATH   "${OpenCV_INSTALL_BINARIES_PREFIX}lib${LIB_SUFFIX}")
-    endif()
+    ocv_update(OPENCV_LIB_INSTALL_PATH   "${OpenCV_INSTALL_BINARIES_PREFIX}lib${LIB_SUFFIX}")
+    ocv_update(OPENCV_3P_LIB_INSTALL_PATH  "${OpenCV_INSTALL_BINARIES_PREFIX}lib${LIB_SUFFIX}")
     ocv_update(OPENCV_3P_LIB_INSTALL_PATH  "${OpenCV_INSTALL_BINARIES_PREFIX}staticlib${LIB_SUFFIX}")
     ocv_update(OPENCV_SAMPLES_SRC_INSTALL_PATH    samples)
     ocv_update(OPENCV_JAR_INSTALL_PATH java)
@@ -495,15 +485,9 @@
   set(OPENCV_LIB_ARCHIVE_INSTALL_PATH ${OPENCV_LIB_INSTALL_PATH})
 endif()
 
-if(WIN32)
-  # Postfix of DLLs:
-  set(OPENCV_DLLVERSION "${OPENCV_VERSION_MAJOR}${OPENCV_VERSION_MINOR}${OPENCV_VERSION_PATCH}")
-  set(OPENCV_DEBUG_POSTFIX d)
-else()
-  # Postfix of so's:
-  set(OPENCV_DLLVERSION "")
-  set(OPENCV_DEBUG_POSTFIX "")
-endif()
+# Postfix of so's:
+set(OPENCV_DLLVERSION "")
+set(OPENCV_DEBUG_POSTFIX "")
 
 if(DEFINED CMAKE_DEBUG_POSTFIX)
   set(OPENCV_DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
Common subdirectories: opencv-3.4.3.orig/data and opencv-3.4.3/data
Common subdirectories: opencv-3.4.3.orig/doc and opencv-3.4.3/doc
Common subdirectories: opencv-3.4.3.orig/include and opencv-3.4.3/include
Common subdirectories: opencv-3.4.3.orig/modules and opencv-3.4.3/modules
Common subdirectories: opencv-3.4.3.orig/platforms and opencv-3.4.3/platforms
Common subdirectories: opencv-3.4.3.orig/samples and opencv-3.4.3/samples
