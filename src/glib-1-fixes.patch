This file is part of MXE.
See index.html for further information.

Contains ad hoc patches for cross building.

From 2a15b5d8c570d34e44d315116219bcd731054a54 Mon Sep 17 00:00:00 2001
From: "a@mxe.cc" <a@mxe.cc>
Date: Thu, 23 Sep 2010 21:41:51 +0200
Subject: [PATCH 1/8] optional gettext

---
 configure.ac |    4 ++--
 glib/gi18n.h |    5 +++++
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/configure.ac b/configure.ac
index cadd925..241284d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -479,8 +479,8 @@ AC_SUBST([CONFIG_STATUS_DEPENDENCIES],['$(top_srcdir)/po/LINGUAS'])
 GLIB_GNU_GETTEXT
 
 if test "$gt_cv_have_gettext" != "yes" ; then
-  AC_MSG_ERROR([
-*** You must have either have gettext support in your C library, or use the 
+  AC_MSG_WARN([
+*** You should have either have gettext support in your C library, or use the
 *** GNU gettext library. (http://www.gnu.org/software/gettext/gettext.html
 ])
 fi
diff --git a/glib/gi18n.h b/glib/gi18n.h
index c710046..269bfdf 100644
--- a/glib/gi18n.h
+++ b/glib/gi18n.h
@@ -22,7 +22,12 @@
 
 #include <glib.h>
 
+#ifdef ENABLE_NLS
 #include <libintl.h>
+#else
+#define gettext(String) (String)
+#endif
+
 #include <string.h>
 
 #define  _(String) gettext (String)
-- 
1.7.10.4


From 6e19d772238eb429fe0ea77b65dbc9d8a5d89afa Mon Sep 17 00:00:00 2001
From: "a@mxe.cc" <a@mxe.cc>
Date: Thu, 23 Sep 2010 21:42:46 +0200
Subject: [PATCH 2/8] fix tool paths

---
 glib-2.0.pc.in |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/glib-2.0.pc.in b/glib-2.0.pc.in
index 4a8898e..5164bae 100644
--- a/glib-2.0.pc.in
+++ b/glib-2.0.pc.in
@@ -3,9 +3,9 @@ exec_prefix=@exec_prefix@
 libdir=@libdir@
 includedir=@includedir@
 
-glib_genmarshal=glib-genmarshal
-gobject_query=gobject-query
-glib_mkenums=glib-mkenums
+glib_genmarshal=@bindir@/glib-genmarshal
+gobject_query=@bindir@/gobject-query
+glib_mkenums=@bindir@/glib-mkenums
 
 Name: GLib
 Description: C Utility Library
-- 
1.7.10.4


From 556504bac07f4d80c0d9e50be1090f3ae02a653b Mon Sep 17 00:00:00 2001
From: Hans Petter Jansson <hpj@cl.no>
Date: Fri, 15 Jun 2012 15:25:01 +0200
Subject: [PATCH 3/8] Avoid DllMain symbol conflict when linking statically

---
 gio/giomodule.c  |    6 +-----
 glib/glib-init.c |    6 +++---
 2 files changed, 4 insertions(+), 8 deletions(-)

diff --git a/gio/giomodule.c b/gio/giomodule.c
index d8ce138..679279f 100644
--- a/gio/giomodule.c
+++ b/gio/giomodule.c
@@ -782,10 +782,8 @@ extern GType _g_network_monitor_netlink_get_type (void);
 
 static HMODULE gio_dll = NULL;
 
-#ifdef DLL_EXPORT
-
 BOOL WINAPI
-DllMain (HINSTANCE hinstDLL,
+gio_DllMain (HINSTANCE hinstDLL,
 	 DWORD     fdwReason,
 	 LPVOID    lpvReserved)
 {
@@ -801,8 +799,6 @@ _g_io_win32_get_module (void)
   return gio_dll;
 }
 
-#endif
-
 #undef GIO_MODULE_DIR
 
 /* GIO_MODULE_DIR is used only in code called just once,
diff --git a/glib/glib-init.c b/glib/glib-init.c
index f4edd5c..02bf678 100644
--- a/glib/glib-init.c
+++ b/glib/glib-init.c
@@ -226,9 +226,9 @@ glib_init (void)
 HMODULE glib_dll;
 
 BOOL WINAPI
-DllMain (HINSTANCE hinstDLL,
-         DWORD     fdwReason,
-         LPVOID    lpvReserved)
+glib_DllMain (HINSTANCE hinstDLL,
+              DWORD     fdwReason,
+              LPVOID    lpvReserved)
 {
   switch (fdwReason)
     {
-- 
1.7.10.4


From a83efeaa712bdfe43a1fcada6775ce2c89781631 Mon Sep 17 00:00:00 2001
From: Hans Petter Jansson <hpj@cl.no>
Date: Fri, 15 Jun 2012 15:27:22 +0200
Subject: [PATCH 4/8] Allow building without inotify support

---
 configure.ac |   13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/configure.ac b/configure.ac
index 241284d..04d8590 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1700,11 +1700,18 @@ dnl *****************************
 dnl ** Check for inotify (GIO) **
 dnl *****************************
 inotify_support=no
-AC_CHECK_HEADERS([sys/inotify.h],
-[
+
+AC_ARG_ENABLE(inotify,
+              AC_HELP_STRING([--disable-inotify],
+                             [build without inotify support]))
+
+if test "x$enable_inotify" != "xno"; then
+ AC_CHECK_HEADERS([sys/inotify.h],
+ [
 	inotify_support=yes
 	AC_CHECK_FUNCS(inotify_init1)
-])
+ ])
+fi
 
 AM_CONDITIONAL(HAVE_INOTIFY, [test "$inotify_support" = "yes"])
 
-- 
1.7.10.4


From e3d193f7e4f3d1ada0d65ccdccab1f28ef6d23d3 Mon Sep 17 00:00:00 2001
From: Hans Petter Jansson <hpj@cl.no>
Date: Fri, 15 Jun 2012 15:28:14 +0200
Subject: [PATCH 5/8] Make sure STDC_HEADERS is set for AC_CHECK_ALIGNOF.
 Backported from upstream

---
 configure.ac |    2 ++
 1 file changed, 2 insertions(+)

diff --git a/configure.ac b/configure.ac
index 04d8590..29b6252 100644
--- a/configure.ac
+++ b/configure.ac
@@ -452,6 +452,8 @@ fi
 
 AC_MSG_RESULT($enable_iconv_cache)
 
+# Make sure STDC_HEADERS is set for AC_CHECK_ALIGNOF
+AS_IF([false], [AC_CHECK_HEADER([stdint.h])])
 
 dnl
 dnl zlib support
-- 
1.7.10.4


From 08b493b8480f360ab21a0ce5c79b096392a389a8 Mon Sep 17 00:00:00 2001
From: Hans Petter Jansson <hpj@cl.no>
Date: Fri, 15 Jun 2012 15:29:06 +0200
Subject: [PATCH 6/8] Link with dnsapi

---
 gio-2.0.pc.in |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/gio-2.0.pc.in b/gio-2.0.pc.in
index 9f7123f..b0d5779 100644
--- a/gio-2.0.pc.in
+++ b/gio-2.0.pc.in
@@ -13,6 +13,6 @@ Description: glib I/O library
 Version: @VERSION@
 Requires: glib-2.0 gobject-2.0
 Requires.private: gmodule-no-export-2.0
-Libs: -L${libdir} -lgio-2.0
+Libs: -L${libdir} -lgio-2.0 -ldnsapi
 Libs.private: @ZLIB_LIBS@ @NETWORK_LIBS@
 Cflags:
-- 
1.7.10.4


From 645849d2055b1c7a46132a8b83739290b316ffba Mon Sep 17 00:00:00 2001
From: Hans Petter Jansson <hpj@cl.no>
Date: Fri, 15 Jun 2012 15:29:38 +0200
Subject: [PATCH 7/8] Ensure globals are initialized even when DllMain is not
 being run

---
 glib/gmain.c         |    6 +++
 glib/gthread-win32.c |  106 ++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 112 insertions(+)

diff --git a/glib/gmain.c b/glib/gmain.c
index 760f179..878ac14 100644
--- a/glib/gmain.c
+++ b/glib/gmain.c
@@ -1981,12 +1981,15 @@ g_get_real_time (void)
 #ifdef G_OS_WIN32
 static ULONGLONG (*g_GetTickCount64) (void) = NULL;
 static guint32 g_win32_tick_epoch = 0;
+static gboolean g_win32_clock_is_initialized;
 
 G_GNUC_INTERNAL void
 g_clock_win32_init (void)
 {
   HMODULE kernel32;
 
+  g_win32_clock_is_initialized = TRUE;
+
   g_GetTickCount64 = NULL;
   kernel32 = GetModuleHandle ("KERNEL32.DLL");
   if (kernel32 != NULL)
@@ -2105,6 +2108,9 @@ g_get_monotonic_time (void)
    *    timeBeginPeriod() to increase it as much as they want
    */
 
+  if (!g_win32_clock_is_initialized)
+    g_clock_win32_init ();
+
   if (g_GetTickCount64 != NULL)
     {
       guint32 ticks_as_32bit;
diff --git a/glib/gthread-win32.c b/glib/gthread-win32.c
index 5a9ac97..e4d1d48 100644
--- a/glib/gthread-win32.c
+++ b/glib/gthread-win32.c
@@ -117,18 +117,28 @@ typedef struct
   void     (__stdcall * WakeConditionVariable)       (gpointer cond);
 } GThreadImplVtable;
 
+/* Needed for static builds where DllMain initializer doesn't get called */
+static gboolean g_threads_is_initialized;
+G_GNUC_INTERNAL void g_thread_win32_init (void);
+
 static GThreadImplVtable g_thread_impl_vtable;
 
 /* {{{1 GMutex */
 void
 g_mutex_init (GMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.InitializeSRWLock (mutex);
 }
 
 void
 g_mutex_clear (GMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   if (g_thread_impl_vtable.DeleteSRWLock != NULL)
     g_thread_impl_vtable.DeleteSRWLock (mutex);
 }
@@ -136,18 +146,27 @@ g_mutex_clear (GMutex *mutex)
 void
 g_mutex_lock (GMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.AcquireSRWLockExclusive (mutex);
 }
 
 gboolean
 g_mutex_trylock (GMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   return g_thread_impl_vtable.TryAcquireSRWLockExclusive (mutex);
 }
 
 void
 g_mutex_unlock (GMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.ReleaseSRWLockExclusive (mutex);
 }
 
@@ -158,6 +177,9 @@ g_rec_mutex_impl_new (void)
 {
   CRITICAL_SECTION *cs;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   cs = g_slice_new (CRITICAL_SECTION);
   InitializeCriticalSection (cs);
 
@@ -168,6 +190,10 @@ static void
 g_rec_mutex_impl_free (CRITICAL_SECTION *cs)
 {
   DeleteCriticalSection (cs);
+
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_slice_free (CRITICAL_SECTION, cs);
 }
 
@@ -176,6 +202,9 @@ g_rec_mutex_get_impl (GRecMutex *mutex)
 {
   CRITICAL_SECTION *impl = mutex->p;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   if G_UNLIKELY (mutex->p == NULL)
     {
       impl = g_rec_mutex_impl_new ();
@@ -190,30 +219,45 @@ g_rec_mutex_get_impl (GRecMutex *mutex)
 void
 g_rec_mutex_init (GRecMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   mutex->p = g_rec_mutex_impl_new ();
 }
 
 void
 g_rec_mutex_clear (GRecMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_rec_mutex_impl_free (mutex->p);
 }
 
 void
 g_rec_mutex_lock (GRecMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   EnterCriticalSection (g_rec_mutex_get_impl (mutex));
 }
 
 void
 g_rec_mutex_unlock (GRecMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   LeaveCriticalSection (mutex->p);
 }
 
 gboolean
 g_rec_mutex_trylock (GRecMutex *mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   return TryEnterCriticalSection (g_rec_mutex_get_impl (mutex));
 }
 
@@ -222,12 +266,18 @@ g_rec_mutex_trylock (GRecMutex *mutex)
 void
 g_rw_lock_init (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.InitializeSRWLock (lock);
 }
 
 void
 g_rw_lock_clear (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   if (g_thread_impl_vtable.DeleteSRWLock != NULL)
     g_thread_impl_vtable.DeleteSRWLock (lock);
 }
@@ -235,36 +285,54 @@ g_rw_lock_clear (GRWLock *lock)
 void
 g_rw_lock_writer_lock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.AcquireSRWLockExclusive (lock);
 }
 
 gboolean
 g_rw_lock_writer_trylock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   return g_thread_impl_vtable.TryAcquireSRWLockExclusive (lock);
 }
 
 void
 g_rw_lock_writer_unlock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.ReleaseSRWLockExclusive (lock);
 }
 
 void
 g_rw_lock_reader_lock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.AcquireSRWLockShared (lock);
 }
 
 gboolean
 g_rw_lock_reader_trylock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   return g_thread_impl_vtable.TryAcquireSRWLockShared (lock);
 }
 
 void
 g_rw_lock_reader_unlock (GRWLock *lock)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.ReleaseSRWLockShared (lock);
 }
 
@@ -272,12 +340,18 @@ g_rw_lock_reader_unlock (GRWLock *lock)
 void
 g_cond_init (GCond *cond)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.InitializeConditionVariable (cond);
 }
 
 void
 g_cond_clear (GCond *cond)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   if (g_thread_impl_vtable.DeleteConditionVariable)
     g_thread_impl_vtable.DeleteConditionVariable (cond);
 }
@@ -285,12 +359,18 @@ g_cond_clear (GCond *cond)
 void
 g_cond_signal (GCond *cond)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.WakeConditionVariable (cond);
 }
 
 void
 g_cond_broadcast (GCond *cond)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.WakeAllConditionVariable (cond);
 }
 
@@ -298,6 +378,9 @@ void
 g_cond_wait (GCond  *cond,
              GMutex *entered_mutex)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   g_thread_impl_vtable.SleepConditionVariableSRW (cond, entered_mutex, INFINITE, 0);
 }
 
@@ -308,6 +391,9 @@ g_cond_wait_until (GCond  *cond,
 {
   gint64 span;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   span = end_time - g_get_monotonic_time ();
 
   if G_UNLIKELY (span < 0)
@@ -340,6 +426,9 @@ g_private_get_impl (GPrivate *key)
 
   if G_UNLIKELY (impl == 0)
     {
+      if (!g_threads_is_initialized)
+        g_thread_win32_init ();
+
       EnterCriticalSection (&g_private_lock);
       impl = (DWORD) key->p;
       if (impl == 0)
@@ -433,6 +522,9 @@ g_system_thread_free (GRealThread *thread)
 {
   GThreadWin32 *wt = (GThreadWin32 *) thread;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   win32_check_for_error (CloseHandle (wt->handle));
   g_slice_free (GThreadWin32, wt);
 }
@@ -440,6 +532,9 @@ g_system_thread_free (GRealThread *thread)
 void
 g_system_thread_exit (void)
 {
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   _endthreadex (0);
 }
 
@@ -448,6 +543,9 @@ g_thread_win32_proxy (gpointer data)
 {
   GThreadWin32 *self = data;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   self->proxy (self);
 
   g_system_thread_exit ();
@@ -465,6 +563,9 @@ g_system_thread_new (GThreadFunc   func,
   GThreadWin32 *thread;
   guint ignore;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   thread = g_slice_new0 (GThreadWin32);
   thread->proxy = func;
 
@@ -494,6 +595,9 @@ g_system_thread_wait (GRealThread *thread)
 {
   GThreadWin32 *wt = (GThreadWin32 *) thread;
 
+  if (!g_threads_is_initialized)
+    g_thread_win32_init ();
+
   win32_check_for_error (WAIT_FAILED != WaitForSingleObject (wt->handle, INFINITE));
 }
 
@@ -985,6 +1089,8 @@ g_thread_lookup_native_funcs (void)
 G_GNUC_INTERNAL void
 g_thread_win32_init (void)
 {
+  g_threads_is_initialized = TRUE;
+
   if (!g_thread_lookup_native_funcs ())
     g_thread_xp_init ();
 
-- 
1.7.10.4


From e6c9e1075e9c176d0184cff07d6f2eef224ab608 Mon Sep 17 00:00:00 2001
From: Mark Brand <mabrand@mabrand.nl>
Date: Mon, 18 Jun 2012 16:02:12 +0200
Subject: [PATCH 8/8] kill docs and gtk-doc dependence (mxe-specific)

---
 Makefile.am                                        |    5 +-
 autogen.sh                                         |    7 -
 configure.ac                                       |    2 -
 docs/Makefile.am                                   |   11 --
 docs/reference/Makefile.am                         |    3 -
 docs/reference/gio/Makefile.am                     |  181 --------------------
 .../gio/gdbus-object-manager-example/Makefile.am   |   68 --------
 docs/reference/glib/Makefile.am                    |  129 --------------
 docs/reference/gobject/Makefile.am                 |  103 -----------
 9 files changed, 2 insertions(+), 507 deletions(-)
 delete mode 100644 docs/Makefile.am
 delete mode 100644 docs/reference/Makefile.am
 delete mode 100644 docs/reference/gio/Makefile.am
 delete mode 100644 docs/reference/gio/gdbus-object-manager-example/Makefile.am
 delete mode 100644 docs/reference/glib/Makefile.am
 delete mode 100644 docs/reference/gobject/Makefile.am

diff --git a/Makefile.am b/Makefile.am
index f5c510d..28d77c6 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -6,7 +6,7 @@ include $(top_srcdir)/Makefile.decl
 
 ACLOCAL_AMFLAGS = -I m4macros ${ACLOCAL_FLAGS}
 
-SUBDIRS = . m4macros glib gmodule gthread gobject gio tests po docs
+SUBDIRS = . m4macros glib gmodule gthread gobject gio tests po
 DIST_SUBDIRS = $(SUBDIRS) build
 
 bin_SCRIPTS = glib-gettextize
@@ -62,8 +62,7 @@ BUILT_EXTRA_DIST = 		\
 	README			\
 	INSTALL			\
 	ChangeLog		\
-	config.h.win32		\
-	gtk-doc.make
+	config.h.win32
 
 CONFIGURE_DEPENDENCIES = acglib.m4
 
diff --git a/autogen.sh b/autogen.sh
index 01011d9..bc0ab0b 100755
--- a/autogen.sh
+++ b/autogen.sh
@@ -7,12 +7,6 @@ test -n "$srcdir" || srcdir=.
 olddir=`pwd`
 cd "$srcdir"
 
-GTKDOCIZE=`which gtkdocize`
-if test -z $GTKDOCIZE; then
-        echo "*** No GTK-Doc found, please install it ***"
-        exit 1
-fi
-
 AUTORECONF=`which autoreconf`
 if test -z $AUTORECONF; then
         echo "*** No autoreconf found, please install it ***"
@@ -24,7 +18,6 @@ fi
 # regenerated from their corresponding *.in files by ./configure anyway.
 touch README INSTALL
 
-gtkdocize || exit $?
 autoreconf --force --install --verbose || exit $?
 
 cd "$olddir"
diff --git a/configure.ac b/configure.ac
index 29b6252..24a0c3c 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2598,8 +2598,6 @@ dnl **************************
 dnl *** Checks for gtk-doc ***
 dnl **************************
 
-GTK_DOC_CHECK([1.15], [--flavour no-tmpl])
-
 AC_ARG_ENABLE(man,
               [AC_HELP_STRING([--enable-man],
                               [regenerate man pages from Docbook [default=no]])],enable_man=yes,
diff --git a/docs/Makefile.am b/docs/Makefile.am
deleted file mode 100644
index 2349f44..0000000
--- a/docs/Makefile.am
+++ /dev/null
@@ -1,11 +0,0 @@
-## Process this file with automake to produce Makefile.in
-include $(top_srcdir)/Makefile.decl
-
-SUBDIRS = reference
-
-EXTRA_DIST += debugging.txt macros.txt
-
-files:
-	@files=`ls $(DISTFILES) 2> /dev/null `; for p in $$files; do \
-	  echo $$p; \
-	done
diff --git a/docs/reference/Makefile.am b/docs/reference/Makefile.am
deleted file mode 100644
index 63cf90d..0000000
--- a/docs/reference/Makefile.am
+++ /dev/null
@@ -1,3 +0,0 @@
-include $(top_srcdir)/Makefile.decl
-
-SUBDIRS = glib gobject gio
diff --git a/docs/reference/gio/Makefile.am b/docs/reference/gio/Makefile.am
deleted file mode 100644
index 7d2d264..0000000
--- a/docs/reference/gio/Makefile.am
+++ /dev/null
@@ -1,181 +0,0 @@
-include $(top_srcdir)/Makefile.decl
-NULL =
-
-SUBDIRS = gdbus-object-manager-example
-
-# The name of the module.
-DOC_MODULE=gio
-
-# The top-level SGML file.
-DOC_MAIN_SGML_FILE=gio-docs.xml
-
-# Extra options to supply to gtkdoc-scan
-SCAN_OPTIONS=--deprecated-guards="G_DISABLE_DEPRECATED" \
-             --ignore-decorators="G_GNUC_WARN_UNUSED_RESULT"
-
-# The directory containing the source code. Relative to $(srcdir)
-DOC_SOURCE_DIR=$(top_srcdir)/gio
-
-BUILT_HFILES=gioenumtypes.h
-HFILE_GLOB=$(top_srcdir)/gio/*.h
-CFILE_GLOB=$(top_srcdir)/gio/*.c
-
-IGNORE_HFILES = \
-	fam				\
-	fen				\
-	gdbus-2.0			\
-	gvdb				\
-	inotify				\
-	libasyncns			\
-	tests				\
-	win32				\
-	xdgmime				\
-	gapplicationimpl.h		\
-	gasynchelper.h			\
-	gcontenttypeprivate.h		\
-	gdbusauth.h			\
-	gdbusauthmechanismanon.h	\
-	gdbusauthmechanismexternal.h	\
-	gdbusauthmechanism.h		\
-	gdbusauthmechanismsha1.h	\
-	gdbusprivate.h			\
-	gdelayedsettingsbackend.h	\
-	gdummyfile.h			\
-	gdummyproxyresolver.h		\
-	gdummytlsbackend.h		\
-	gfileattribute-priv.h		\
-	gfileinfo-priv.h		\
-	giomodule-priv.h		\
-	glocaldirectorymonitor.h	\
-	glocalfileenumerator.h		\
-	glocalfile.h			\
-	glocalfileinfo.h		\
-	glocalfileinputstream.h		\
-	glocalfileiostream.h		\
-	glocalfilemonitor.h		\
-	glocalfileoutputstream.h	\
-	glocalvfs.h			\
-	gmountprivate.h			\
-	gnativevolumemonitor.h		\
-	gnetworkingprivate.h		\
-	gnetworkmonitorbase.h		\
-	gnetworkmonitornetlink.h	\
-	gpollfilemonitor.h		\
-	gregistrysettingsbackend.h	\
-	gsettingsbackendinternal.h	\
-	gsettings-mapping.h		\
-	gsettingsschema-internal.h	\
-	gsocketinputstream.h		\
-	gsocketoutputstream.h		\
-	gsocks4aproxy.h			\
-	gsocks4proxy.h			\
-	gsocks5proxy.h			\
-	gthreadedresolver.h		\
-	gunionvolumemonitor.h		\
-	gunixmount.h			\
-	gunixresolver.h			\
-	gunixvolume.h			\
-	gunixvolumemonitor.h		\
-	gwin32appinfo.h			\
-	gwin32mount.h			\
-	gwin32resolver.h		\
-	gwin32volumemonitor.h
-
-
-# CFLAGS and LDFLAGS for compiling scan program. Only needed
-# if $(DOC_MODULE).types is non-empty.
-INCLUDES = \
-	$(gio_INCLUDES)			\
-	$(GLIB_DEBUG_FLAGS)
-
-GTKDOC_LIBS = \
-	$(top_builddir)/glib/libglib-2.0.la		\
-	$(top_builddir)/gobject/libgobject-2.0.la	\
-	$(top_builddir)/gmodule/libgmodule-2.0.la	\
-	$(top_builddir)/gio/libgio-2.0.la		\
-	$(NULL)
-
-# Extra options to supply to gtkdoc-mkdb
-MKDB_OPTIONS = --output-format=xml --sgml-mode --name-space=g \
-	--ignore-files='libasyncns tests'
-
-# Images to copy into HTML directory
-HTML_IMAGES =			\
-	gvfs-overview.png	\
-	menu-example.png	\
-	menu-model.png
-
-content_files =			\
-	version.xml		\
-	overview.xml		\
-	migrating-posix.xml	\
-	migrating-gnome-vfs.xml	\
-	migrating-gconf.xml	\
-	migrating-gdbus.xml	\
-	gio-querymodules.xml	\
-	glib-compile-schemas.xml\
-	glib-compile-resources.xml	\
-	gsettings.xml		\
-	gresource.xml		\
-	gdbus.xml		\
-	gdbus-codegen.xml	\
-	$(NULL)
-
-expand_content_files =		\
-	overview.xml		\
-	migrating-posix.xml	\
-	migrating-gnome-vfs.xml	\
-	migrating-gconf.xml	\
-	migrating-gdbus.xml	\
-	gdbus-codegen.xml	\
-	$(NULL)
-
-extra_files =			\
-	version.xml.in		\
-	gvfs-overview.odg
-
-# Extra options to supply to gtkdoc-fixref
-FIXXREF_OPTIONS=--extra-dir=$(srcdir)/../glib/html --extra-dir=$(srcdir)/../gobject/html
-
-include $(top_srcdir)/gtk-doc.make
-
-EXTRA_DIST +=			\
-	version.xml.in
-
-man_MANS =			\
-	gio-querymodules.1	\
-	glib-compile-schemas.1	\
-	glib-compile-resources.1	\
-	gsettings.1		\
-	gresource.1		\
-	gdbus.1			\
-	gdbus-codegen.1
-
-if ENABLE_MAN
-
-.xml.1:
-	@XSLTPROC@ -nonet http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<
-
-dist-local-check-mans-enabled:
-	if grep "Man generation disabled" $(man_MANS) >/dev/null; then $(RM) $(man_MANS); fi
-
-else
-
-$(man_MANS):
-	echo Man generation disabled.  Creating dummy $@.  Configure with --enable-man to enable it.
-	echo Man generation disabled.  Remove this file, configure with --enable-man, and rebuild > $@
-
-dist-local-check-mans-enabled:
-	echo "*** --enable-man must be used in order to make dist"
-	false
-
-endif
-
-MAINTAINERCLEANFILES = $(man_MANS) $(BUILT_SOURCES)
-
-EXTRA_DIST += $(man_MANS)
-
-dist-hook-local: dist-local-check-mans-enabled all-local
-
-gio-docs-clean: clean
-	cd $(srcdir) && rm -rf xml html
diff --git a/docs/reference/gio/gdbus-object-manager-example/Makefile.am b/docs/reference/gio/gdbus-object-manager-example/Makefile.am
deleted file mode 100644
index 90c10aa..0000000
--- a/docs/reference/gio/gdbus-object-manager-example/Makefile.am
+++ /dev/null
@@ -1,68 +0,0 @@
-include $(top_srcdir)/Makefile.decl
-NULL =
-
-# The name of the module.
-DOC_MODULE=gdbus-object-manager-example
-
-# The top-level SGML file.
-DOC_MAIN_SGML_FILE=gdbus-object-manager-example-docs.xml
-
-# Extra options to supply to gtkdoc-scan
-SCAN_OPTIONS=--deprecated-guards="G_DISABLE_DEPRECATED"
-
-# The directory containing the source code. Relative to $(srcdir)
-DOC_SOURCE_DIR=$(top_builddir)/gio/tests/gdbus-object-manager-example
-
-HFILE_GLOB=$(top_builddir)/gio/tests/gdbus-object-manager-example/*.h
-CFILE_GLOB=$(top_builddir)/gio/tests/gdbus-object-manager-example/*.c
-
-# Headers to ignore
-IGNORE_HFILES=				\
-	$(NULL)
-
-# CFLAGS and LDFLAGS for compiling scan program. Only needed
-# if $(DOC_MODULE).types is non-empty.
-INCLUDES = \
-	$(gio_INCLUDES)			\
-	$(GLIB_DEBUG_FLAGS)
-
-GTKDOC_LIBS = \
-	$(top_builddir)/glib/libglib-2.0.la		\
-	$(top_builddir)/gobject/libgobject-2.0.la	\
-	$(top_builddir)/gmodule/libgmodule-2.0.la	\
-	$(top_builddir)/gio/libgio-2.0.la		\
-	$(top_builddir)/gio/tests/gdbus-object-manager-example/libgdbus-example-objectmanager.la \
-	$(NULL)
-
-# Extra options to supply to gtkdoc-mkdb
-MKDB_OPTIONS = --output-format=xml --sgml-mode --name-space=g \
-	$(NULL)
-
-# Images to copy into HTML directory
-HTML_IMAGES =			\
-	$(NULL)
-
-content_files =			\
-	$(NULL)
-
-expand_content_files =		\
-	$(NULL)
-
-extra_files =			\
-	$(NULL)
-
-include $(top_srcdir)/gtk-doc.make
-
-EXTRA_DIST +=			\
-	$(NULL)
-
-MAINTAINERCLEANFILES = $(BUILT_SOURCES)
-
-dist-hook-local: all-local
-
-gdbus-object-manager-example-docs-clean: clean
-	cd $(srcdir) && rm -rf xml html
-
-# Nuke installed docs (don't know how to avoid installing them)
-install-data-hook :
-	rm -rf $(DESTDIR)$(datadir)/gtk-doc/html/gdbus-object-manager-example
diff --git a/docs/reference/glib/Makefile.am b/docs/reference/glib/Makefile.am
deleted file mode 100644
index 2ceae09..0000000
--- a/docs/reference/glib/Makefile.am
+++ /dev/null
@@ -1,129 +0,0 @@
-## Process this file with automake to produce Makefile.in
-include $(top_srcdir)/Makefile.decl
-
-AUTOMAKE_OPTIONS = 1.6
-
-# The name of the module.
-DOC_MODULE=glib
-
-# The top-level SGML file.
-DOC_MAIN_SGML_FILE=glib-docs.sgml
-
-# The directory containing the source code. Relative to $(srcdir)
-DOC_SOURCE_DIR=$(top_srcdir)/glib $(top_srcdir)/gmodule
-
-# Extra options to supply to gtkdoc-scan
-SCAN_OPTIONS=--deprecated-guards="G_DISABLE_DEPRECATED" --ignore-decorators="GLIB_VAR|G_GNUC_WARN_UNUSED_RESULT"
-
-# Extra options to supply to gtkdoc-mkdb
-MKDB_OPTIONS=--sgml-mode --output-format=xml --name-space=g
-
-# Used for dependencies
-HFILE_GLOB=$(top_srcdir)/glib/*.h $(top_srcdir)/gmodule/*.h
-CFILE_GLOB=$(top_srcdir)/glib/*.c $(top_srcdir)/gmodule/*.c
-
-# Ignore some private headers
-IGNORE_HFILES = \
-	gallocator.h		\
-	gdatasetprivate.h	\
-	glibintl.h		\
-	gbsearcharray.h		\
-	glib-private.h		\
-	gmoduleconf.h		\
-	gthreadprivate.h	\
-	gunibreak.h		\
-	gunicomp.h		\
-	gunidecomp.h		\
-	gunichartables.h	\
-	glib_probes.h		\
-	glib_trace.h		\
-	libcharset.h		\
-	gdebug.h		\
-	gprintfint.h		\
-	gmirroringtable.h	\
-	gscripttable.h		\
-	glib-mirroring-tab	\
-	gnulib			\
-	pcre			\
-	update-pcre		\
-	gbytesprivate.h		\
-	gvariant-internal.h	\
-	gvariant-serialiser.h	\
-	gvariant-core.h		\
-	gvarianttypeinfo.h	\
-	gwakeup.h
-
-# Images to copy into HTML directory
-HTML_IMAGES =  				\
-	file-name-encodings.png		\
-	mainloop-states.gif
-
-# Extra SGML files that are included by $(DOC_MAIN_SGML_FILE)
-content_files =				\
-	cross.sgml			\
-	running.sgml			\
-	building.sgml			\
-	changes.sgml			\
-	compiling.sgml			\
-	resources.sgml			\
-	regex-syntax.sgml		\
-	version.xml			\
-	glib-gettextize.xml		\
-	gtester.xml			\
-	gtester-report.xml		\
-	gvariant-varargs.xml		\
-	gvariant-text.xml
-
-expand_content_files = 			\
-	compiling.sgml
-
-# Extra options to supply to gtkdoc-fixref
-FIXXREF_OPTIONS=--extra-dir=$(srcdir)/../gobject/html --extra-dir=$(srcdir)/../gio/html
-
-# include common portion ...
-include $(top_srcdir)/gtk-doc.make
-
-# Other files to distribute
-EXTRA_DIST +=				\
-	file-name-encodings.png		\
-	file-name-encodings.sxd		\
-	mainloop-states.fig		\
-	mainloop-states.png		\
-	mainloop-states.eps		\
-	version.xml.in
-
-########################################################################
-
-man_MANS =		  	\
-	glib-gettextize.1 	\
-	gtester.1		\
-	gtester-report.1
-
-if ENABLE_MAN
-
-.xml.1:
-	@XSLTPROC@ -nonet http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<
-
-dist-local-check-mans-enabled:
-	if grep "Man generation disabled" $(man_MANS) >/dev/null; then $(RM) $(man_MANS); fi
-
-else
-
-$(man_MANS):
-	echo Man generation disabled.  Creating dummy $@.  Configure with --enable-man to enable it.
-	echo Man generation disabled.  Remove this file, configure with --enable-man, and rebuild > $@
-
-dist-local-check-mans-enabled:
-	echo "*** --enable-man must be used in order to make dist"
-	false
-
-endif
-
-MAINTAINERCLEANFILES = $(man_MANS) $(BUILT_SOURCES)
-
-EXTRA_DIST += $(man_MANS)
-
-dist-hook-local: dist-local-check-mans-enabled all-local
-
-glib-docs-clean: clean
-	cd $(srcdir) && rm -rf xml html
diff --git a/docs/reference/gobject/Makefile.am b/docs/reference/gobject/Makefile.am
deleted file mode 100644
index 3a637b7..0000000
--- a/docs/reference/gobject/Makefile.am
+++ /dev/null
@@ -1,103 +0,0 @@
-## Process this file with automake to produce Makefile.in
-include $(top_srcdir)/Makefile.decl
-
-AUTOMAKE_OPTIONS = 1.6
-
-# The name of the module.
-DOC_MODULE=gobject
-
-# The top-level SGML file.
-DOC_MAIN_SGML_FILE=gobject-docs.sgml
-
-# The directory containing the source code. Relative to $(srcdir)
-DOC_SOURCE_DIR=$(top_srcdir)/gobject
-
-# Extra options to supply to gtkdoc-scan
-SCAN_OPTIONS=--deprecated-guards="G_DISABLE_DEPRECATED" \
-             --ignore-decorators="G_GNUC_INTERNAL|G_GNUC_WARN_UNUSED_RESULT"
-
-# Extra options to supply to gtkdoc-mkdb
-MKDB_OPTIONS=--sgml-mode --output-format=xml --name-space=g
-
-# Used for dependencies
-HFILE_GLOB=$(top_srcdir)/gobject/*.h
-CFILE_GLOB=$(top_srcdir)/gobject/*.c
-
-# Headers to ignore
-IGNORE_HFILES = \
-	tests			\
-	gobject_trace.h		\
-	gatomicarray.h
-
-
-# CFLAGS and LDFLAGS for compiling scan program. Only needed
-# if $(DOC_MODULE).types is non-empty.
-INCLUDES = \
-	-I$(srcdir) 			\
-	$(gobject_INCLUDES) 		\
-	$(GLIB_DEBUG_FLAGS)
-GTKDOC_LIBS = \
-	$(top_builddir)/glib/libglib-2.0.la	\
-	$(top_builddir)/gobject/libgobject-2.0.la
-
-# Images to copy into HTML directory
-HTML_IMAGES =  \
-	images/glue.png
-
-# Extra SGML files that are included by $(DOC_MAIN_SGML_FILE)
-content_files = version.xml 		\
-		glib-mkenums.xml 	\
-		glib-genmarshal.xml	\
-		gobject-query.xml \
-		tut_gobject.xml \
-		tut_gsignal.xml \
-		tut_gtype.xml \
-		tut_howto.xml \
-		tut_intro.xml \
-		tut_tools.xml
-
-# Extra options to supply to gtkdoc-fixref
-FIXXREF_OPTIONS=--extra-dir=$(srcdir)/../glib/html
-
-include $(top_srcdir)/gtk-doc.make
-
-# Other files to distribute
-EXTRA_DIST += 		\
-	gobject.cI	\
-	version.xml.in
-
-########################################################################
-
-man_MANS = 			\
-	glib-mkenums.1 		\
-	glib-genmarshal.1 	\
-	gobject-query.1
-
-if ENABLE_MAN
-
-.xml.1:
-	@XSLTPROC@ -nonet http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<
-
-dist-local-check-mans-enabled:
-	if grep "Man generation disabled" $(man_MANS) >/dev/null; then $(RM) $(man_MANS); fi
-
-else
-
-$(man_MANS):
-	echo Man generation disabled.  Creating dummy $@.  Configure with --enable-man to enable it.
-	echo Man generation disabled.  Remove this file, configure with --enable-man, and rebuild > $@
-
-dist-local-check-mans-enabled:
-	echo "*** --enable-man must be used in order to make dist"
-	false
-
-endif
-
-MAINTAINERCLEANFILES = $(man_MANS) $(BUILT_SOURCES)
-
-EXTRA_DIST += $(man_MANS)
-
-dist-hook-local: dist-local-check-mans-enabled all-local
-
-gobject-docs-clean: clean
-	cd $(srcdir) && rm -rf xml html
-- 
1.7.10.4

