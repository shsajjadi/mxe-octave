diff -r a9667cba7fd4 src/CmplxGSVD.cc
--- a/src/CmplxGSVD.cc	Mon Jan 02 16:31:33 2017 -0500
+++ b/src/CmplxGSVD.cc	Sun Jan 20 20:15:09 2019 +0100
@@ -215,9 +215,6 @@
 			     F77_CHAR_ARG_LEN (1)
 			     F77_CHAR_ARG_LEN (1)
 			     F77_CHAR_ARG_LEN (1)));
-  
-  if (f77_exception_encountered)
-    (*current_liboctave_error_handler) ("unrecoverable error in zggsvd");
 
   if (info < 0) {
     (*current_liboctave_error_handler) ("zggsvd.f: argument %d illegal", -info);
diff -r a9667cba7fd4 src/dbleGSVD.cc
--- a/src/dbleGSVD.cc	Mon Jan 02 16:31:33 2017 -0500
+++ b/src/dbleGSVD.cc	Sun Jan 20 20:15:09 2019 +0100
@@ -210,10 +210,7 @@
                              F77_CHAR_ARG_LEN (1)
                              F77_CHAR_ARG_LEN (1)
                              F77_CHAR_ARG_LEN (1)));
-  
-  if (f77_exception_encountered)
-    (*current_liboctave_error_handler) ("unrecoverable error in dggsvd");
- 
+
   if (info < 0) {
     (*current_liboctave_error_handler) ("dggsvd.f: argument %d illegal", -info);
   } else {
diff -r a9667cba7fd4 src/pgmres.cc
--- a/src/pgmres.cc	Mon Jan 02 16:31:33 2017 -0500
+++ b/src/pgmres.cc	Sun Jan 20 20:15:09 2019 +0100
@@ -148,7 +148,7 @@
                   prn = xnorm (res, 2.0);
                   B(0) = prn;
                   H = Matrix (1, 1, 0.0);
-                  V = Matrix (b.length (), 1, 0.0);
+                  V = Matrix (b.numel (), 1, 0.0);
                   for (octave_idx_type ii = 0; ii < V.rows (); ii++)
                     V(ii,0) = res(ii) / prn;
                 }
@@ -206,7 +206,7 @@
 {
   ColumnVector res;
   octave_value_list retval;
-  retval = feval (fun, octave_value(b), 1);
+  retval = octave::feval (fun, ovl (b), 1);
   res = retval(0).column_vector_value ();
   if ( error_state)
     {
