diff -uNr a/src/error-helpers.cc b/src/error-helpers.cc
--- a/src/error-helpers.cc	2016-09-18 14:36:40.000000000 -0400
+++ b/src/error-helpers.cc	2018-04-09 14:52:43.380796194 -0400
@@ -24,7 +24,7 @@
 // call verror
 #ifdef HAVE_OCTAVE_VERROR_ARG_EXC
 void
-c_verror (octave_execution_exception& e, const char *fmt, ...)
+c_verror (octave::execution_exception& e, const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
@@ -33,7 +33,7 @@
 }
 #else
 void
-c_verror (const octave_execution_exception&, const char *fmt, ...)
+c_verror (const octave::execution_exception&, const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
diff -uNr a/src/error-helpers.h b/src/error-helpers.h
--- a/src/error-helpers.h	2016-09-18 14:36:40.000000000 -0400
+++ b/src/error-helpers.h	2018-04-09 14:52:56.204181295 -0400
@@ -21,9 +21,9 @@
 
 // call verror
 #ifdef HAVE_OCTAVE_VERROR_ARG_EXC
-void c_verror (octave_execution_exception&, const char *, ...);
+void c_verror (octave::execution_exception&, const char *, ...);
 #else
-void c_verror (const octave_execution_exception&, const char *, ...);
+void c_verror (const octave::execution_exception&, const char *, ...);
 #endif
 
 // call verror
@@ -33,7 +33,7 @@
 // both if Octave uses exceptions for errors and if it still uses
 // error_state. In the latter case return 'retval'.
 #ifdef HAVE_OCTAVE_ERROR_STATE
-  // can throw octave_execution_exception despite of this
+  // can throw octave::execution_exception despite of this
   #define CHECK_ERROR(code, retval, ...)      \
     try \
       { \
@@ -46,7 +46,7 @@
             return retval; \
           } \
       } \
-    catch (octave_execution_exception& e) \
+    catch (octave::execution_exception& e) \
       { \
         c_verror (e, __VA_ARGS__); \
  \
@@ -58,7 +58,7 @@
       { \
         code ; \
       } \
-    catch (octave_execution_exception& e) \
+    catch (octave::execution_exception& e) \
       { \
         c_verror (e, __VA_ARGS__); \
  \
@@ -70,7 +70,7 @@
 // Octave doesn't throw exceptions for errors but still uses
 // error_state.
 #ifdef HAVE_OCTAVE_ERROR_STATE
-  // can throw octave_execution_exception despite of this
+  // can throw octave::execution_exception despite of this
   #define CHECK_ERROR_EXIT1(code, ...) \
     try \
       { \
@@ -83,7 +83,7 @@
             exit (1); \
           } \
       } \
-    catch (octave_execution_exception& e) \
+    catch (octave::execution_exception& e) \
       { \
         c_verror (e, __VA_ARGS__); \
  \
@@ -95,7 +95,7 @@
       { \
         code ; \
       } \
-    catch (octave_execution_exception& e) \
+    catch (octave::execution_exception& e) \
       { \
         c_verror (e, __VA_ARGS__); \
  \
@@ -107,7 +107,7 @@
 // Octave uses exceptions for errors and if it still uses
 // error_state. In the latter case reset error_state to 0.
 #ifdef HAVE_OCTAVE_ERROR_STATE
-  // can throw octave_execution_exception despite of this
+  // can throw octave::execution_exception despite of this
   #define SET_ERR(code, err) \
     err = false; \
  \
@@ -120,7 +120,7 @@
             err = true; \
           } \
       } \
-    catch (octave_execution_exception&) \
+    catch (octave::execution_exception&) \
       { \
         err = true; \
       }
@@ -130,7 +130,7 @@
       { \
         code ; \
       } \
-    catch (octave_execution_exception&) \
+    catch (octave::execution_exception&) \
       { \
         err = true; \
       }
